<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="RCE.Command">
<Super>%Persistent</Super>
<TimeCreated>63474,55169.546273</TimeCreated>

<Property name="Level">
<Type>%Boolean</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
//(DISPLAYLIST = ",OS,Instance", VALUELIST = ",0,1") [ InitialExpression = 1 ];

]]></Content>
</UDLText>

<Property name="Command">
<Type>%String</Type>
</Property>

<Method name="%OnNew">
<Description><![CDATA[
This callback method is invoked by the <METHOD>%New</METHOD> method to 
provide notification that a new instance of an object is being created.

<P>If this method returns an error then the object will not be created.
<p>It is passed the arguments provided in the %New call.
When customizing this method, override the arguments with whatever variables and types you expect to receive from %New().
For example, if you're going to call %New, passing 2 arguments, %OnNew's signature could be:
<p>Method %OnNew(dob as %Date = "", name as %Name = "") as %Status
If instead of returning a %Status code this returns an oref and this oref is a subclass of the current
class then this oref will be the one returned to the caller of %New method.]]></Description>
<FormalSpec>Command:%String="",Level:%Boolean=1</FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<ServerOnly>1</ServerOnly>
<Implementation><![CDATA[
	set ..Command = Command
	set ..Level = Level
	Quit $$$OK
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^RCE.CommandD</DataLocation>
<DefaultData>CommandDefaultData</DefaultData>
<IdLocation>^RCE.CommandD</IdLocation>
<IndexLocation>^RCE.CommandI</IndexLocation>
<StreamLocation>^RCE.CommandS</StreamLocation>
<Data name="CommandDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Level</Value>
</Value>
<Value name="3">
<Value>Command</Value>
</Value>
<Value name="4">
<Value>Level2</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
