<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="RCE.Tests">
<IncludeCode>%occOptions</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeCreated>63474,66517.333827</TimeCreated>

<Method name="TestConnection">
<Description>
do ##class(RCE.Tests).TestConnection()</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	do ##class(RCE.Tests).KillExtent()
	do ##class(RCE.Tests).CreateTestServer()
	
	set ip = ^settings("test ip")
	&sql(	SELECT TOP 1 Id INTO :Id 
			FROM RCE.Instance 
			WHERE OS->Machine->IP = :ip)
	set Instance = ##class(RCE.Instance).%OpenId(Id)
	set st = Instance.ExecuteScript(Instance.OS.CreateTestScript(),"USER")
	if $$$ISERR(st) { w $System.Status.GetErrorText(st),! } else { w "Success execute",!}
	
	return st
]]></Implementation>
</Method>

<Method name="KillExtent">
<Description>
do ##class(RCE.Tests).KillExtent()</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	do ##class(RCE.Machine).%KillExtent()
	do ##class(RCE.OS).%KillExtent()
	do ##class(RCE.Instance).%KillExtent()
	do ##class(RCE.Script).%KillExtent()
]]></Implementation>
</Method>

<Method name="CreateTestServer">
<Description>
do ##class(RCE.Tests).CreateTestServer()</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set Machine = ##class(RCE.Machine).%New()
	set Machine.Description = ^settings("test description")
	set Machine.IP = ^settings("test ip")
	
	set OS = ##class(RCE.OS).%New(^settings("test osname"))
	set OS.Username = ^settings("test username")
	set OS.Password = ^settings("test password")
	set OS.Bit = ^settings("test osbit")
	
	set Instance = ##class(RCE.Instance).%New()
	set Instance.Name = ^settings("test cache name") 
	set Instance.Version = ^settings("test cache version")
	set Instance.Security = ^settings("test cache security")
	set Instance.User = $g(^settings("test cache user"))
	set Instance.Pass = $g(^settings("test cache password"))
	
	set Instance.OS = OS
	set OS.Machine = Machine
	
	return Machine.%Save()
]]></Implementation>
</Method>

<Method name="CreateLocalServer">
<Description>
do ##class(RCE.Tests).CreateLocalServer()</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>OSUser:%String,OSPassword:%String,InstanceUser:%String,InstancePassword:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set Machine = ##class(RCE.Machine).%New()
	set Machine.Description = "local server"
	set Machine.IP = "127.0.0.1"
	
	set OS = ##class(RCE.OS).%New($system.Version.GetOS())
	set OS.Username = OSUser
	set OS.Password = OSPassword
	set OS.Bit = $case($system.Version.Is64Bits(),1:"x64",0:"x86",:"")
	
	set Instance = ##class(RCE.Instance).%New()
	set Instance.Name = ##class(%SYS.System).GetInstanceName()
	set Instance.Version = $system.Version.GetNumber()
	do ##class(Security.System).GetInstallationSecuritySetting(.security)
	
	set Instance.Security = $case(security,"None":"Minimal",:security)
	
	if (security'="None") {
		set Instance.User = InstanceUser
		set Instance.Pass = InstancePassword
	}
	set Instance.OS = OS
	set OS.Machine = Machine
	
	return Machine.%Save()
]]></Implementation>
</Method>
</Class>
</Export>
