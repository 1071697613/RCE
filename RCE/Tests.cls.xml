<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="RCE.Tests">
<Super>%RegisteredObject</Super>
<TimeCreated>63474,66517.333827</TimeCreated>

<Method name="TestConnection">
<Description>
do ##class(RCE.Tests).TestConnection()</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	do ##class(RCE.Tests).KillExtent()
	do ##class(RCE.Tests).CreateTestServer()
	
	set ip = ^settings("test ip")
	&sql(	SELECT TOP 1 Id INTO :Id 
			FROM RCE.Instance 
			WHERE OS->Machine->IP = :ip)
	set Instance = ##class(RCE.Instance).%OpenId(Id)
	//set st = Instance.OS.Auth(.ssh)
	//if $$$ISERR(st) { w $System.Status.GetErrorText(st),! } else { w "Success connect",!}
	set st = Instance.ExecuteScript(..CreateTestScriptWindows(),"USER")
	if $$$ISERR(st) { w $System.Status.GetErrorText(st),! } else { w "Success execute",!}
	
	return st
]]></Implementation>
</Method>

<Method name="KillExtent">
<Description>
do ##class(RCE.Tests).KillExtent()</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	do ##class(RCE.Machine).%KillExtent()
	do ##class(RCE.OS).%KillExtent()
	do ##class(RCE.Instance).%KillExtent()
	do ##class(RCE.Script).%KillExtent()
]]></Implementation>
</Method>

<Method name="CreateTestServer">
<Description>
do ##class(RCE.Tests).CreateTestServer()</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set Machine = ##class(RCE.Machine).%New()
	set Machine.Description = ^settings("test description")
	set Machine.IP = ^settings("test ip")
	
	set OS = ##class(RCE.OS.Windows).%New()
	set OS.Username = ^settings("test username")
	set OS.Password = ^settings("test password")
	set OS.Bit = ^settings("test osbit")
	
	set Instance = ##class(RCE.Instance).%New()
	set Instance.Name = ^settings("test cache name") 
	set Instance.Version = ^settings("test cache version")
	set Instance.Security = ^settings("test cache security")
	set Instance.User = $g(^settings("test cache user"))
	set Instance.Pass = $g(^settings("test cache password"))
	
	set Instance.OS = OS
	set OS.Machine = Machine
	
	return Machine.%Save()
]]></Implementation>
</Method>

<Method name="CreateTestScript">
<ClassMethod>1</ClassMethod>
<ReturnType>RCE.Script</ReturnType>
<Implementation><![CDATA[
	set script = ##class(RCE.Script).%New()
	do script.Insert(##class(RCE.Command).%New("touch 123",0))
	do script.Insert(##class(RCE.Command).%New("set ^test=1",1))
	do script.Insert(##class(RCE.Command).%New("set ^test(1)=2",1))
	do script.Insert(##class(RCE.Command).%New("touch 1234",0))
	do script.%Save()
	return script
]]></Implementation>
</Method>

<Method name="CreateTestScriptWindows">
<ClassMethod>1</ClassMethod>
<ReturnType>RCE.Script</ReturnType>
<Implementation><![CDATA[
	set script = ##class(RCE.Script).%New()
	do script.Insert(##class(RCE.Command).%New("cd \",0))
	do script.Insert(##class(RCE.Command).%New("echo start  %date% - %time% >> date.txt",0))
	do script.Insert(##class(RCE.Command).%New("set ^test=1",1))
	do script.Insert(##class(RCE.Command).%New("set ^test(1)=2",1))
	do script.Insert(##class(RCE.Command).%New("echo end %date% - %time% >> date.txt",0))
	do script.%Save()
	return script
]]></Implementation>
</Method>
</Class>
</Export>
